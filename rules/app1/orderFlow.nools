
rule sumbmission_check_1 {
	when {
		i : item ruleUtils.checkItemAccSplitsForDepAndCC(i);
	}
	then{
		console.log('Item \"%s\" account splits have same cost center & department, executing GEP consolidator.\n', i.Name);
	}
}

rule sumbmission_check_2 {
	when {
		i : item ruleUtils.checkItemAccSplitsForEmptyProjectCostCenterAndLegalEntity(i, ['CC1', 'CC100', 'CC10000'], ['A', 'B', 'C']);
	}
	then{
	}
}

rule approval_check{
	when {
		i : item ruleUtils.checkContractedItemApprovalForUnitPriceVsContractedPrice(i);
	}
	then{
		console.log('Approval rejected for item \"%s\" as its Unit Price > Contrated price\n', i.Name);
	}
}

rule send_approval_department_manager{
	when {
		i : item ruleUtils.sendApprovalToDepartmentManager(i);
	}
	then{
	}
}

rule send_approval_distinct_costcenters{
	when{
		i : item ruleUtils.sendApprovalToDistinctCostCenters(i);
	}
	then{
	}
}

rule send_approval_for_total_accounting_split_value {
	when {
		o : order ruleUtils.sendApprovalForTotalAccountingSplitValue(o);
	}
	then{
	}
}

rule send_approval_contact_manager_group {
	when {
		o : order ruleUtils.sendApprovalToContactManagerGroup(o);
	}
	then{
		console.log('All the items in order id : %s are contracted with no \"CC1\" as cost center, sending approval to contact manager group\n', o.Id);
	}
}

rule send_approval_adhoc_cc_group{
	when {
		o : order ruleUtils.sendApprovalToAdhocCCGroup(o);
	}
	then{
		console.log('There exists a cost center \"CC10\"" and a contracted item on order id : %s, sending approal to ad-hoc cost center group\n', o.Id);
	}
}

rule send_approval_logger_group {
	when{
		o : order ruleUtils.sendApprovalToLoggerGroup(o);
	}
	then{
		console.log('Order Id : %s either has a non-contracted item or an item with 1 accounting split, sending approval to logger group\n', o.Id);
	}
}

